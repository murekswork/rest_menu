openapi: 3.1.0
info:
  title: Menu
  version: 0.1.0
paths:
  /api/v1/menus/{target_menu_id}/counts:
    get:
      tags:
        - menu-router
      summary: Menu-Read-Counts
      operationId: menu_read_counts_api_v1_menus__target_menu_id__counts_get
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuReadCounts'
        '404':
          description: Menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/menus:
    get:
      tags:
        - menu-router
      summary: Menus-Read
      operationId: menus_read_api_v1_menus_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuRead'
                type: array
                title: Response Menus Read Api V1 Menus Get
    post:
      tags:
        - menu-router
      summary: Menu-Create
      operationId: menu_create_api_v1_menus_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuRead'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/menus/{target_menu_id}:
    get:
      tags:
        - menu-router
      summary: Menu-Read
      operationId: menu_read_api_v1_menus__target_menu_id__get
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuRead'
        '404':
          description: Menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
        - menu-router
      summary: Menu-Patch
      operationId: menu_patch_api_v1_menus__target_menu_id__patch
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuRead'
        '404':
          description: Menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - menu-router
      summary: Menu-Delete
      operationId: menu_delete_api_v1_menus__target_menu_id__delete
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuIdOnly'
        '404':
          description: Menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/menus/{target_menu_id}/submenus:
    get:
      tags:
        - submenu-router
      summary: Submenu-Read-List
      operationId: submenu_read_list_api_v1_menus__target_menu_id__submenus_get
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmenuRead'
                title: Response Submenu Read List Api V1 Menus  Target Menu Id  Submenus Get
        '404':
          description: Submenus parent menu not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - submenu-router
      summary: Submenu-Create
      operationId: submenu_create_api_v1_menus__target_menu_id__submenus_post
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmenuCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmenuRead'
        '404':
          description: Submenu parent menu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/menus/{target_menu_id}/submenus/{target_submenu_id}:
    get:
      tags:
        - submenu-router
      summary: Submenu Read
      operationId: submenu_read_api_v1_menus__target_menu_id__submenus__target_submenu_id__get
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmenuRead'
        '404':
          description: Submenu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - submenu-router
      summary: Submenu-Delete
      operationId: submenu_delete_api_v1_menus__target_menu_id__submenus__target_submenu_id__delete
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmenuIdOnly'
        '404':
          description: Submenu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
        - submenu-router
      summary: Submenu Patch
      operationId: submenu_patch_api_v1_menus__target_menu_id__submenus__target_submenu_id__patch
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmenuCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmenuRead'
        '404':
          description: Submenu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/menus/{target_menu_id}/submenus/{target_submenu_id}/dishes/{target_dish_id}:
    patch:
      tags:
        - dish-router
      summary: Dish Patch
      operationId: dish_patch_api_v1_menus__target_menu_id__submenus__target_submenu_id__dishes__target_dish_id__patch
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
        - name: target_dish_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Dish Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DishCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishRead'
        '404':
          description: Dish not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - dish-router
      summary: Dish Delete
      operationId: dish_delete_api_v1_menus__target_menu_id__submenus__target_submenu_id__dishes__target_dish_id__delete
      parameters:
        - name: target_dish_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Dish Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishIdOnly'
        '404':
          description: Dish not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - dish-router
      summary: Dish Read
      operationId: dish_read_api_v1_menus__target_menu_id__submenus__target_submenu_id__dishes__target_dish_id__get
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
        - name: target_dish_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Dish Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishRead'
        '404':
          description: Dish not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/menus/{target_menu_id}/submenus/{target_submenu_id}/dishes:
    get:
      tags:
        - dish-router
      summary: Dish-List
      operationId: dish_list_api_v1_menus__target_menu_id__submenus__target_submenu_id__dishes_get
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DishRead'
                title: Response Dish List Api V1 Menus  Target Menu Id  Submenus  Target Submenu Id  Dishes Get
        '404':
          description: Dish not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - dish-router
      summary: Dish-Create
      operationId: dish_create_api_v1_menus__target_menu_id__submenus__target_submenu_id__dishes_post
      parameters:
        - name: target_menu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Menu Id
        - name: target_submenu_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Target Submenu Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DishCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishRead'
        '404':
          description: Dish parent Submenu not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseErrorResponseSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    DatabaseErrorResponseSchema:
      properties:
        detail:
          type: string
          title: Detail
      type: object
      required:
        - detail
      title: DatabaseErrorResponseSchema
    DishCreate:
      properties:
        title:
          type: string
          title: Title
        price:
          type: number
          title: Price
        description:
          type: string
          title: Description
      type: object
      required:
        - title
        - price
        - description
      title: DishCreate
    DishIdOnly:
      properties:
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - id
      title: DishIdOnly
    DishRead:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
        price:
          anyOf:
            - type: number
            - type: string
          title: Price
        description:
          type: string
          title: Description
      type: object
      required:
        - id
        - title
        - price
        - description
      title: DishRead
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    MenuCreate:
      properties:
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
      type: object
      required:
        - title
        - description
      title: MenuCreate
    MenuIdOnly:
      properties:
        menu_id:
          type: string
          format: uuid
          title: Menu Id
      type: object
      required:
        - menu_id
      title: MenuIdOnly
    MenuRead:
      properties:
        id:
          anyOf:
            - type: string
              format: uuid
            - type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        dishes_count:
          type: integer
          title: Dishes Count
          default: 0
        submenus_count:
          type: integer
          title: Submenus Count
          default: 0
        submenus:
          items:
            $ref: '#/components/schemas/SubmenuRead'
          type: array
          title: Submenus
          default: []
      type: object
      required:
        - id
        - title
        - description
      title: MenuRead
    MenuReadCounts:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        submenus_count:
          type: integer
          title: Submenus Count
        dishes_count:
          type: integer
          title: Dishes Count
      type: object
      required:
        - id
        - title
        - description
        - submenus_count
        - dishes_count
      title: MenuReadCounts
    SubmenuCreate:
      properties:
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
          default: description
      type: object
      required:
        - title
      title: SubmenuCreate
    SubmenuIdOnly:
      properties:
        submenu_id:
          type: string
          format: uuid
          title: Submenu Id
      type: object
      required:
        - submenu_id
      title: SubmenuIdOnly
    SubmenuRead:
      properties:
        id:
          anyOf:
            - type: string
              format: uuid
            - type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
          default: description
        dishes_count:
          type: integer
          title: Dishes Count
          default: 0
        dishes:
          items:
            $ref: '#/components/schemas/DishRead'
          type: array
          title: Dishes
          default: []
      type: object
      required:
        - id
        - title
      title: SubmenuRead
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
